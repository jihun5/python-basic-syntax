# 최대값 구하기
lista = [100, 20, 30, 5, 90]
# 위 리스트의 최대값을 정렬함X(sort), 최대값함수X, for문 쓰기 min, max는 예약 코드이기때문에 이것만 쓰면 안됨
# 방법1
maxA = 0 # max = lista[0] -> 값이 음수일 경우 최대 값은 0으로 고정될 수도 있기때문에 lista 값을 하나 가져와서 비교할 수 있다.
minA = lista[0]
for a in lista: # 100, 20, 30, 5, 90 출력
    if maxA < a: # 100, 20, 30, 5, 90 출력 > if max가 a
        maxA = a
    elif minA > a: # 최소값을 lista[0]번째 부터 찾는다는 가정 
                   # else를 쓰지 않는건 최대값을 구하고 끝나기때문에 else minA가 90이 출력될 가능성이있다.
        minA = a   # 만약 min = 0으로 두고 하면 5>0보다 크니까 출력값은 0이나온다.
print(minA)        # 따라서 최대값, 최솟값을 구할 때는 정해진 list 값의 첫번째를 설정하고
                  # for문에서 lista전체와 비교하여 구하는 것이 바람직하다

# 방법2 max() min()
maxA = max(lista)
minA = min(lista)

# 방법3 sort()
lista.sort()
minA = lista[0] # 최소값
maxA = lista[-1] # 최대값
print(len(lista)) # lista의 오름차순 정리하여 길이를 구하면 맨 마지막 숫자가 가장 높은 수
lista[4] # 5개가 나왔기 때문에 0 1 2 3 4, 4가 가장 높은수 = len(lista)-1
print(lista[4])

# 내림차순 정렬찾기
listb = []
for a in range(len(lista)):
    listb.append(list[len(lista)-a-1])
print(listb)

a = 10
if a >5:
    print("참입니다.")
if a >100:
    print("참입니다.") #위의 if와 상관없이 독립적으로 존재
else:
    print("거짓입니다.") 
# 실행이되는 이유는 바로위에 if가 거짓이기 때문 맨위에 if와는 상관이없음 elif를 쓰는경우 else는 영향을 받음
# else 상단에 있는 if 또는 elif에 종속된다.
# elif도 마찬가지로 elif상단에 if에 종속된다.

# 숫자를 입력받아서, 90이하면 예각입니다.
# 90이면 직각
# 91~179면 둔각
# 180도면 평행
# ~중 하나만을 실행시키고자 하는 경우 elif를 if에 종속시켜 실행하면 실수가 없다.
num1 = int(input("숫자를 입력해주시오:"))
if num1 < 90:
    print("예각")
elif num1 == 90:     #if로 쓰는 순간 독립된 형태이기때문에 위에서 true라면 둔각과 예각이 모두 출략되는 현상이 일어남
    print("직각")
elif num1 < 180:
    print("둔각")
else:                # elif num1 == 180: 로 써된다. 
    print("평행")

# if문 한줄로 쓰기
# 코드가 짧고 단순한 경우에 아래와 같이 한줄로 쓰는 것을 권장함. 들여쓰기 해서 써도 무방
a = 10 
if a>1: print("a는 1보다 큽니다.") ; print("a는 1보다 큽니다.") #두 줄로 출력할 경우 ; 으로 구분짓기 
# 할수는 있지만 기본문법으로 쓰는 것이 가장 바람직

# 조건부표현식(삼항연산자) : 간단한 식으로 표현
# 먼저, if문의 실행문을 if문 앞으로, :을 빼고 한줄로.
a = 10
print('A는 10보다 큽니다') if a > 10  else  print('A는 10보다 작습니다')

# 실행문을 실행하기 위해 사용한다기 보다는
# 참인경우에 어떤 값, 거짓인경우 어떤 값을 쉽게 result에 담을 때 사용
result = "A는 10보다 큼" if a>10 else 'A는 10보다 작음'
# print(result)
# # == if a > 10:
#         result = 'A는 10보다 큼'
#     else:
#         result = 'A는 10보다 작음'

num1 = [1,2,3,4,5,6,7,8,9,10]
A = int(input("숫자 하나를 입력하시오 :"))
# 키보드로 정수하나를 입력받아 그 값이 있는지 찾아내라 else 리스트에 포함되지 않습니다. 입력한 숫자는 index[]
if A in num1:
    print("리스트에 포함이 되어있습니다.")
else:
    print("리스트에 포함이 되어 있지 않습니다.")

# 항공사에서는 짐을 부칠 때 10kg이상 부터 수수료를 내야함
# 몫 구하는 //
# 10의 배수 단위로 만원씩 증가한다. 만약 10kg미만이면 수수료는 없고
# 사용자의 짐의 무게를 입력받고 , 지불해야 하는 금액을 계산하는 프로그램을 만들어라

A = int(input("무게의 kg은?:"))
w = (A//10) * 10000
print("짐의 무게는 %d이고 수수료는 %d입니다." %(A, w))

# f 포맷팅
print(f"짐의 무게는 {A}이고 수수료는 {w}입니다.")

# 돈이 만원 이상 있고, 배가 고프면(yes, no) "저녁을 사먹으시오"를 출력
# 그렇지 않으면 "집에가시오"를 출력하도록 프로그래밍하시오
h = int(input("소지한 금액은 어느정도인가?:"))
g = input("배가 고프신가요?: yes or no")
# if h > 10000:
#     print(g)
# elif g == "yse":
#     print("저녁을 사먹으시오")
# elif g == "no":
#     print("집으로 가시오")
# else:
    # ("집으로 가시오")

if h > 10000 and g == 'yes':
    print("밥을 사먹으시오")
else:
    print("no")

# a와 b 같은지 비교하는 연산자 is
# 객체 타입의 경우에는 메모리 주소를 비교하고, 
# 숫자, 문자, bool같은 기본타입의 경우 값을 비교한다.
# 숫자, 문자, bool같은 경우에는 데이터 pool을 만들어서, 재활용한다 pool은 바로 가져온다.
# 그래서 값을 비교할 때 메모리 주소가 아니라, 데이터 pool에서 값을 비교
a = 10
b = 10
if a is b:  # true
    print("참입니다.")

a = [10, 20]
b = [10, 20]
if a is b:
    print("참입니다") # 이경우 완전히 똑같아도 참이라고 뜨지 않음                a 주소: 1011  10   b 주소 :10191  10
                     # 리스트는 주소를 할당받고 주소에서 그 값을 찾는            a 주소: 1012  20   b 주소 :10192  20
                     # 시스템 a의 10과 b의 10은 서로 다른 주소를 가지고 있다.    a 주소: 1013  30   b 주소 :10193  30
                     # is문을 썼을 때 서로 다른 주소를 가지고 있기때문에 다르다.
# print(id.(10))
# print(id(0)) = 0의 주소 140705552986888 

a = 10
b = 20
if a == b:
    pass # pass 시키는 것 pass를 명시적으로 표현한것 
else :
    print("두 값이 다릅니다.")

# mi = ['cash', 'card']
# if a not in mi:
#     print("결제에 실패했다")
#       =  위와 아래가 동일함
# if a in mi:
#     pass
# else:
#     print("결제에 실패했다")

